apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'

repositories {
	mavenCentral()
	mavenRepo(url: 'http://download.eclipse.org/jgit/maven')
	flatDir { dirs 'lib' }
}

dependencies {
	compile 'org.eclipse.jgit:org.eclipse.jgit:1.2.+'
	compile 'com.sun.jersey:jersey-core:1.11'
	compile 'com.sun.jersey:jersey-server:1.11'
	compile 'com.sun.jersey:jersey-servlet:1.11'
	compile 'org.codehaus.jackson:jackson-jaxrs:1.9.+'
	compile 'com.sun.jersey.contribs:jersey-guice:1.11'
	compile 'com.google.guava:guava:11.+'
	compile 'com.google.inject:guice:3.0'
	compile 'com.google.inject.extensions:guice-multibindings:3.0'
	compile 'com.google.inject.extensions:guice-assistedinject:3.0'
	compile 'com.ibm.icu:icu4j:4.8.1.1'
	compile 'com.google:soy:latest'

	providedCompile 'org.mortbay.jetty:servlet-api:3.0+'

	testCompile 'org.eclipse.jetty:jetty-server:8.0.+'
	testCompile 'org.eclipse.jetty:jetty-servlet:8.0.+'
	testCompile ('org.eclipse.jetty:jetty-plus:8.0.+') {
		exclude module: 'geronimo-jta_1.1_spec'
		exclude module: 'jetty-jndi'
	}

	testCompile 'junit:junit:4.+'
	testCompile 'com.sun.jersey:jersey-client:1.11'
	testCompile ('com.sun.jersey.jersey-test-framework:jersey-test-framework-core:1.11') { exclude group: 'javax.servlet' }
}

sourceSets {
	main {
		java.srcDir 'src/java'
		resources.srcDir 'src/java'
	}
	bootstrap { java.srcDir "src/bootstrap" }
	test {
		java.srcDirs 'src/test'
		resources.srcDir 'src/test'
	}
}

sourceCompatibility = 1.6
targetCompatibility = 1.6
webAppDirName = "src/webapp"

tasks.withType(AbstractCompile).each { it.options.encoding = "UTF-8" }

eclipse {
	project { name = 'koshinuke.java' }
	classpath {
		containers = [
			'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6'
		]
		defaultOutputDir = file('bin')
		file {
			whenMerged {
				it.entries.find { it.path == 'src/java'}?.output = 'src/webapp/WEB-INF/classes'
			}
		}
	}
}

buildscript {
	repositories {
		mavenCentral()
		mavenRepo(url: 'http://maven.jenkins-ci.org:8081/content/repositories/releases/')
		flatDir { dirs 'lib' }
	}
	dependencies {
		classpath 'args4j:args4j:2.0.+'
		classpath 'rhino:js:1.7R2'
		classpath 'org.objenesis:objenesis:1.2'
		classpath 'com.google.guava:guava:11.+'
		classpath 'com.google.inject:guice:3.0'
		classpath 'com.google.inject.extensions:guice-multibindings:3.0'
		classpath 'com.google.inject.extensions:guice-assistedinject:3.0'
		classpath 'com.ibm.icu:icu4j:4.8.1.1'
		classpath 'com.google:soy:latest'
		classpath 'org.eclipse.jetty:jetty-http:8.0.+'
	}
}

task soy {
	description = 'Generate SoyParseInfo'
	doLast {
		def args = [
			"--outputDirectory",
			"src/java/org/koshinuke/soy/",
			"--javaPackage",
			"org.koshinuke.soy",
			"--javaClassNameSource",
			"filename"
		]
		args += files {
			file("src/webapp/WEB-INF/soy/").listFiles()
		}.filter {
			it.name.endsWith(".soy")
		}.collect { it.absolutePath }

		com.google.template.soy.SoyParseInfoGenerator.main(args as String[])
	}
}

task passwd {
	description = "login.properties Utility."
	doLast {
		println "taichi: " + org.eclipse.jetty.http.security.Credential.MD5.digest("taichipass")
		println "lanius: " + org.eclipse.jetty.http.security.Credential.Crypt.crypt("lanius", "laniuspass")
	}
}